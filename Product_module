<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Unified Pricing & Product Management</title>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
    <style>
        :root {
            --primary: #2c3e50;
            --secondary: #3498db;
            --accent: #e74c3c;
            --light: #ecf0f1;
            --dark: #2c3e50;
            --success: #2ecc71;
            --warning: #f39c12;
            --sidebar-bg: #1a2530;
            --card-bg: rgba(255, 255, 255, 0.95);
            --border-radius: 12px;
            --box-shadow: 0 8px 32px rgba(0, 0, 0, 0.1);
            --transition: all 0.3s ease;
            --gradient-primary: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            --gradient-secondary: linear-gradient(135deg, #f093fb 0%, #f5576c 100%);
            --gradient-success: linear-gradient(135deg, #4facfe 0%, #00f2fe 100%);
        }
        
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
        }
        
        body {
            background: linear-gradient(135deg, #f5f7fa 0%, #c3cfe2 100%);
            color: var(--dark);
            line-height: 1.6;
            padding: 20px;
            min-height: 100vh;
        }
        
        .container {
            max-width: 1200px;
            margin: 0 auto;
        }
        
        header {
            text-align: center;
            margin-bottom: 40px;
            padding: 30px 20px;
            background: var(--gradient-primary);
            color: white;
            border-radius: var(--border-radius);
            box-shadow: var(--box-shadow);
            position: relative;
            overflow: hidden;
        }
        
        header::before {
            content: "";
            position: absolute;
            top: 0;
            left: 0;
            right: 0;
            height: 4px;
            background: linear-gradient(90deg, var(--accent), var(--warning), var(--success));
        }
        
        h1 {
            font-size: clamp(1.8rem, 5vw, 2.8rem);
            margin-bottom: 10px;
            font-weight: 700;
            text-shadow: 0 2px 10px rgba(0, 0, 0, 0.2);
        }
        
        .subtitle {
            font-size: clamp(1rem, 3vw, 1.3rem);
            opacity: 0.9;
            font-weight: 300;
        }
        
        .modules-container {
            display: flex;
            flex-direction: column;
            gap: 30px;
        }
        
        .module {
            background: var(--card-bg);
            border-radius: var(--border-radius);
            box-shadow: var(--box-shadow);
            overflow: hidden;
            transition: var(--transition);
            border: 1px solid rgba(255, 255, 255, 0.5);
        }
        
        .module:hover {
            transform: translateY(-5px);
            box-shadow: 0 15px 30px rgba(0, 0, 0, 0.15);
        }
        
        .module-header {
            background: var(--gradient-primary);
            color: white;
            padding: 18px 25px;
            display: flex;
            align-items: center;
            gap: 12px;
        }
        
        .module-header i {
            font-size: 1.4rem;
            opacity: 0.9;
        }
        
        .module-header h2 {
            font-size: clamp(1.2rem, 4vw, 1.6rem);
            font-weight: 600;
        }
        
        .module-content {
            padding: 25px;
        }
        
        .input-row {
            display: flex;
            gap: 20px;
            margin-bottom: 25px;
            align-items: flex-end;
        }
        
        .input-group {
            flex: 1;
        }
        
        label {
            display: block;
            margin-bottom: 10px;
            font-weight: 600;
            color: var(--primary);
            font-size: 0.95rem;
        }
        
        input {
            width: 100%;
            padding: 14px 18px;
            background: rgba(255, 255, 255, 0.9);
            border: 1px solid #e1e5e9;
            border-radius: 10px;
            font-size: 1rem;
            transition: var(--transition);
            color: #333;
            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.05);
        }
        
        input:focus {
            outline: none;
            border-color: var(--secondary);
            box-shadow: 0 0 0 3px rgba(52, 152, 219, 0.3);
            background: rgba(255, 255, 255, 0.95);
        }
        
        .readonly {
            background: rgba(248, 249, 250, 0.8);
            color: #666;
        }
        
        .total-display {
            background: var(--gradient-secondary);
            padding: 25px;
            border-radius: var(--border-radius);
            text-align: center;
            margin-top: 15px;
            color: white;
        }
        
        .total-label {
            font-size: 1.1rem;
            margin-bottom: 10px;
            font-weight: 500;
        }
        
        .total-value {
            font-size: clamp(1.8rem, 4vw, 2.5rem);
            font-weight: 700;
            text-shadow: 0 2px 5px rgba(0, 0, 0, 0.2);
        }
        
        .formula {
            font-size: 0.85rem;
            color: rgba(255, 255, 255, 0.8);
            margin-top: 12px;
            font-style: italic;
        }
        
        .expiry-display {
            background: var(--gradient-success);
            padding: 20px;
            border-radius: var(--border-radius);
            text-align: center;
            margin-top: 20px;
            color: white;
        }
        
        .expiry-label {
            font-size: 1rem;
            margin-bottom: 8px;
            font-weight: 500;
        }
        
        .expiry-value {
            font-size: 1.5rem;
            font-weight: 700;
            text-shadow: 0 2px 5px rgba(0, 0, 0, 0.2);
        }
        
        .expiry-status {
            margin-top: 20px;
            padding: 18px;
            border-radius: var(--border-radius);
            text-align: center;
            font-weight: 600;
            display: none;
        }
        
        .valid {
            background: rgba(46, 204, 113, 0.2);
            color: #27ae60;
            border-left: 5px solid var(--success);
        }
        
        .expired {
            background: rgba(231, 76, 60, 0.2);
            color: #c0392b;
            border-left: 5px solid var(--accent);
        }
        
        .expiring-soon {
            background: rgba(243, 156, 18, 0.2);
            color: #d35400;
            border-left: 5px solid var(--warning);
        }
        
        .mobile-menu {
            display: none;
            background: var(--gradient-primary);
            color: white;
            padding: 18px;
            border-radius: var(--border-radius);
            margin-bottom: 25px;
            text-align: center;
            box-shadow: var(--box-shadow);
        }
        
        .mobile-menu select {
            width: 100%;
            padding: 14px;
            border-radius: 10px;
            background: rgba(255, 255, 255, 0.9);
            border: 1px solid rgba(255, 255, 255, 0.3);
            font-size: 1rem;
            color: #333;
            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.05);
            cursor: pointer;
            transition: var(--transition);
        }
        
        .mobile-menu select:focus {
            outline: none;
            box-shadow: 0 0 0 3px rgba(255, 255, 255, 0.5);
        }
        
        footer {
            text-align: center;
            margin-top: 50px;
            padding: 25px;
            color: rgba(0, 0, 0, 0.6);
            font-size: 0.9rem;
            background: rgba(255, 255, 255, 0.7);
            border-radius: var(--border-radius);
            backdrop-filter: blur(5px);
            -webkit-backdrop-filter: blur(5px);
            border: 1px solid rgba(255, 255, 255, 0.5);
        }
        
        /* Mobile-specific styles */
        @media (max-width: 768px) {
            body {
                padding: 15px;
            }
            
            .module-content {
                padding: 20px;
            }
            
            .input-row {
                flex-direction: row;
                gap: 12px;
                flex-wrap: nowrap;
                overflow-x: auto;
                padding-bottom: 10px;
            }
            
            .input-group {
                min-width: 45%;
                flex-shrink: 0;
            }
            
            .market-row-1 .input-group {
                min-width: 30%;
            }
            
            .market-row-2 .input-group {
                min-width: 45%;
            }
            
            .mobile-menu {
                display: block;
            }
            
            .desktop-modules {
                display: none;
            }
            
            .module.active {
                display: block;
            }
            
            .total-display {
                padding: 20px;
            }
            
            input {
                padding: 16px 14px;
                font-size: 0.95rem;
            }
        }
        
        /* Desktop-specific styles */
        @media (min-width: 769px) {
            .mobile-menu {
                display: none;
            }
            
            .desktop-modules {
                display: block;
            }
        }
        
        /* Extra small devices */
        @media (max-width: 480px) {
            header {
                padding: 20px 15px;
            }
            
            .module-header {
                padding: 15px 20px;
            }
            
            .module-content {
                padding: 18px;
            }
            
            .total-display {
                padding: 18px;
            }
            
            .input-row {
                gap: 10px;
            }
            
            .input-group {
                min-width: 48%;
            }
            
            .market-row-1 .input-group {
                min-width: 32%;
            }
        }
    </style>
</head>
<body>
    <div class="container">
        <header>
            <h1>Unified Pricing & Product</h1>
            <p class="subtitle">Pricing Logic, and Product Expiry Tracking</p>
        </header>
        
        <!-- Mobile Navigation Menu -->
        <div class="mobile-menu">
            <select id="mobile-module-select">
                <option value="pricing">Pricing Logic Module</option>
                <option value="market">Market Adjustment Module</option>
                <option value="product">Product Life Cycle Module</option>
            </select>
        </div>
        
        <div class="modules-container desktop-modules">
            <!-- Pricing Logic Module -->
            <section class="module" id="pricing-module">
                <div class="module-header">
                    <i class="fas fa-calculator"></i>
                    <h2>Pricing Logic Module</h2>
                </div>
                <div class="module-content">
                    <div class="input-row">
                        <div class="input-group">
                            <label for="mrp">MRP (₹)</label>
                            <input type="number" id="mrp" min="0" step="0.01" placeholder="Enter MRP">
                        </div>
                        <div class="input-group">
                            <label for="rate">Rate (₹)</label>
                            <input type="number" id="rate" class="readonly" readonly placeholder="Auto-calculated">
                        </div>
                    </div>
                    
                    <div class="input-row">
                        <div class="input-group">
                            <label for="discount">Discount (%)</label>
                            <input type="number" id="discount" min="0" max="100" step="0.1" placeholder="Enter discount %">
                        </div>
                        <div class="input-group">
                            <label for="gst">GST (%)</label>
                            <input type="number" id="gst" min="0" step="0.1" placeholder="Enter GST %">
                        </div>
                    </div>
                    
                    <div class="total-display">
                        <div class="total-label">Final Total</div>
                        <div class="total-value" id="final-total">₹0.00</div>
                        <div class="formula">Rate - (Rate × Discount%) + (Rate × GST%)</div>
                    </div>
                </div>
            </section>
            
            <!-- Market Adjustment Logic Module -->
            <section class="module" id="market-module">
                <div class="module-header">
                    <i class="fas fa-chart-line"></i>
                    <h2>Market Adjustment Logic Module</h2>
                </div>
                <div class="module-content">
                    <div class="input-row market-row-1">
                        <div class="input-group">
                            <label for="input-mrp">Input MRP (₹)</label>
                            <input type="number" id="input-mrp" min="0" step="0.01" placeholder="Enter MRP">
                        </div>
                        <div class="input-group">
                            <label for="auto-mrp">Auto MRP (₹)</label>
                            <input type="number" id="auto-mrp" class="readonly" readonly placeholder="Auto-calculated">
                        </div>
                        <div class="input-group">
                            <label for="auto-rate">Auto Rate (₹)</label>
                            <input type="number" id="auto-rate" class="readonly" readonly placeholder="Auto-calculated">
                        </div>
                    </div>
                    
                    <div class="input-row market-row-2">
                        <div class="input-group">
                            <label for="market-discount">Discount (%)</label>
                            <input type="number" id="market-discount" min="0" max="100" step="0.1" placeholder="Enter discount %">
                        </div>
                        <div class="input-group">
                            <label for="market-gst">GST (%)</label>
                            <input type="number" id="market-gst" min="0" step="0.1" placeholder="Enter GST %">
                        </div>
                    </div>
                    
                    <div class="total-display">
                        <div class="total-label">Final Total</div>
                        <div class="total-value" id="market-final-total">₹0.00</div>
                        <div class="formula">Auto Rate - (Auto Rate × Discount%) + (Auto Rate × GST%)</div>
                    </div>
                </div>
            </section>
            
            <!-- Product Life Cycle Module -->
            <section class="module" id="product-module">
                <div class="module-header">
                    <i class="fas fa-calendar-alt"></i>
                    <h2>Product Life Cycle Module</h2>
                </div>
                <div class="module-content">
                    <div class="input-row">
                        <div class="input-group">
                            <label for="manufacturing-date">Manufacturing Date</label>
                            <input type="date" id="manufacturing-date">
                        </div>
                        <div class="input-group">
                            <label for="shelf-life">Shelf Life (months)</label>
                            <input type="number" id="shelf-life" min="1" placeholder="Enter shelf life in months">
                        </div>
                        <div class="input-group">
                            <label for="expiry-date">Expiry Date</label>
                            <input type="text" id="expiry-date" class="readonly" readonly placeholder="Will be calculated">
                        </div>
                    </div>
                    
                    <div class="expiry-display">
                        <div class="expiry-label">Product Expiry</div>
                        <div class="expiry-value" id="expiry-display">Not calculated</div>
                    </div>
                    
                    <div class="expiry-status" id="expiry-status">
                        <!-- Status message will appear here -->
                    </div>
                </div>
            </section>
        </div>
        
        <!-- Mobile-only modules (initially hidden) -->
        <div class="mobile-modules">
            <section class="module mobile-module" id="mobile-pricing">
                <div class="module-header">
                    <i class="fas fa-calculator"></i>
                    <h2>Pricing Logic Module</h2>
                </div>
                <div class="module-content">
                    <div class="input-row">
                        <div class="input-group">
                            <label for="mobile-mrp">MRP (₹)</label>
                            <input type="number" id="mobile-mrp" min="0" step="0.01" placeholder="Enter MRP">
                        </div>
                        <div class="input-group">
                            <label for="mobile-rate">Rate (₹)</label>
                            <input type="number" id="mobile-rate" class="readonly" readonly placeholder="Auto-calculated">
                        </div>
                    </div>
                    
                    <div class="input-row">
                        <div class="input-group">
                            <label for="mobile-discount">Discount (%)</label>
                            <input type="number" id="mobile-discount" min="0" max="100" step="0.1" placeholder="Enter discount %">
                        </div>
                        <div class="input-group">
                            <label for="mobile-gst">GST (%)</label>
                            <input type="number" id="mobile-gst" min="0" step="0.1" placeholder="Enter GST %">
                        </div>
                    </div>
                    
                    <div class="total-display">
                        <div class="total-label">Final Total</div>
                        <div class="total-value" id="mobile-final-total">₹0.00</div>
                        <div class="formula">Rate - (Rate × Discount%) + (Rate × GST%)</div>
                    </div>
                </div>
            </section>
            
            <section class="module mobile-module" id="mobile-market" style="display:none;">
                <div class="module-header">
                    <i class="fas fa-chart-line"></i>
                    <h2>Market Adjustment Module</h2>
                </div>
                <div class="module-content">
                    <div class="input-row market-row-1">
                        <div class="input-group">
                            <label for="mobile-input-mrp">Input MRP (₹)</label>
                            <input type="number" id="mobile-input-mrp" min="0" step="0.01" placeholder="Enter MRP">
                        </div>
                        <div class="input-group">
                            <label for="mobile-auto-mrp">Auto MRP (₹)</label>
                            <input type="number" id="mobile-auto-mrp" class="readonly" readonly placeholder="Auto-calculated">
                        </div>
                        <div class="input-group">
                            <label for="mobile-auto-rate">Auto Rate (₹)</label>
                            <input type="number" id="mobile-auto-rate" class="readonly" readonly placeholder="Auto-calculated">
                        </div>
                    </div>
                    
                    <div class="input-row market-row-2">
                        <div class="input-group">
                            <label for="mobile-market-discount">Discount (%)</label>
                            <input type="number" id="mobile-market-discount" min="0" max="100" step="0.1" placeholder="Enter discount %">
                        </div>
                        <div class="input-group">
                            <label for="mobile-market-gst">GST (%)</label>
                            <input type="number" id="mobile-market-gst" min="0" step="0.1" placeholder="Enter GST %">
                        </div>
                    </div>
                    
                    <div class="total-display">
                        <div class="total-label">Final Total</div>
                        <div class="total-value" id="mobile-market-final-total">₹0.00</div>
                        <div class="formula">Auto Rate - (Auto Rate × Discount%) + (Auto Rate × GST%)</div>
                    </div>
                </div>
            </section>
            
            <section class="module mobile-module" id="mobile-product" style="display:none;">
                <div class="module-header">
                    <i class="fas fa-calendar-alt"></i>
                    <h2>Product Life Cycle Module</h2>
                </div>
                <div class="module-content">
                    <div class="input-row">
                        <div class="input-group">
                            <label for="mobile-manufacturing-date">Manufacturing Date</label>
                            <input type="date" id="mobile-manufacturing-date">
                        </div>
                        <div class="input-group">
                            <label for="mobile-shelf-life">Shelf Life (months)</label>
                            <input type="number" id="mobile-shelf-life" min="1" placeholder="Enter shelf life in months">
                        </div>
                        <div class="input-group">
                            <label for="mobile-expiry-date">Expiry Date</label>
                            <input type="text" id="mobile-expiry-date" class="readonly" readonly placeholder="Will be calculated">
                        </div>
                    </div>
                    
                    <div class="expiry-display">
                        <div class="expiry-label">Product Expiry</div>
                        <div class="expiry-value" id="mobile-expiry-display">Not calculated</div>
                    </div>
                    
                    <div class="expiry-status" id="mobile-expiry-status">
                        <!-- Status message will appear here -->
                    </div>
                </div>
            </section>
        </div>
        
        <footer>
            <p>Unified Pricing & Product Management System &copy; 2023 | Professional Business Solutions</p>
        </footer>
    </div>

    <script>
        // Mobile module navigation
        document.getElementById('mobile-module-select').addEventListener('change', function() {
            const selectedModule = this.value;
            
            // Hide all mobile modules
            document.querySelectorAll('.mobile-module').forEach(module => {
                module.style.display = 'none';
            });
            
            // Show selected module
            document.getElementById('mobile-' + selectedModule).style.display = 'block';
        });
        
        // Pricing Logic Module (Desktop)
        document.getElementById('mrp').addEventListener('input', updatePricing);
        document.getElementById('discount').addEventListener('input', updatePricing);
        document.getElementById('gst').addEventListener('input', updatePricing);
        
        // Pricing Logic Module (Mobile)
        document.getElementById('mobile-mrp').addEventListener('input', updateMobilePricing);
        document.getElementById('mobile-discount').addEventListener('input', updateMobilePricing);
        document.getElementById('mobile-gst').addEventListener('input', updateMobilePricing);
        
        function updatePricing() {
            const mrp = parseFloat(document.getElementById('mrp').value) || 0;
            const discount = parseFloat(document.getElementById('discount').value) || 0;
            const gst = parseFloat(document.getElementById('gst').value) || 0;
            
            // Calculate rate (23.8% less than MRP)
            const rate = mrp * (1 - 0.238);
            document.getElementById('rate').value = rate.toFixed(2);
            
            // Calculate final total
            const discountAmount = rate * (discount / 100);
            const gstAmount = rate * (gst / 100);
            const finalTotal = rate - discountAmount + gstAmount;
            
            document.getElementById('final-total').textContent = `₹${finalTotal.toFixed(2)}`;
        }
        
        function updateMobilePricing() {
            const mrp = parseFloat(document.getElementById('mobile-mrp').value) || 0;
            const discount = parseFloat(document.getElementById('mobile-discount').value) || 0;
            const gst = parseFloat(document.getElementById('mobile-gst').value) || 0;
            
            // Calculate rate (23.8% less than MRP)
            const rate = mrp * (1 - 0.238);
            document.getElementById('mobile-rate').value = rate.toFixed(2);
            
            // Calculate final total
            const discountAmount = rate * (discount / 100);
            const gstAmount = rate * (gst / 100);
            const finalTotal = rate - discountAmount + gstAmount;
            
            document.getElementById('mobile-final-total').textContent = `₹${finalTotal.toFixed(2)}`;
        }
        
        // Market Adjustment Logic Module (Desktop)
        document.getElementById('input-mrp').addEventListener('input', updateMarketPricing);
        document.getElementById('market-discount').addEventListener('input', updateMarketPricing);
        document.getElementById('market-gst').addEventListener('input', updateMarketPricing);
        
        // Market Adjustment Logic Module (Mobile)
        document.getElementById('mobile-input-mrp').addEventListener('input', updateMobileMarketPricing);
        document.getElementById('mobile-market-discount').addEventListener('input', updateMobileMarketPricing);
        document.getElementById('mobile-market-gst').addEventListener('input', updateMobileMarketPricing);
        
        function updateMarketPricing() {
            const inputMrp = parseFloat(document.getElementById('input-mrp').value) || 0;
            const marketDiscount = parseFloat(document.getElementById('market-discount').value) || 0;
            const marketGst = parseFloat(document.getElementById('market-gst').value) || 0;
            
            // Calculate auto MRP (6.25% less than input MRP)
            const autoMrp = inputMrp * (1 - 0.0625);
            document.getElementById('auto-mrp').value = autoMrp.toFixed(2);
            
            // Calculate auto rate (23.8% less than auto MRP)
            const autoRate = autoMrp * (1 - 0.238);
            document.getElementById('auto-rate').value = autoRate.toFixed(2);
            
            // Calculate final total
            const discountAmount = autoRate * (marketDiscount / 100);
            const gstAmount = autoRate * (marketGst / 100);
            const finalTotal = autoRate - discountAmount + gstAmount;
            
            document.getElementById('market-final-total').textContent = `₹${finalTotal.toFixed(2)}`;
        }
        
        function updateMobileMarketPricing() {
            const inputMrp = parseFloat(document.getElementById('mobile-input-mrp').value) || 0;
            const marketDiscount = parseFloat(document.getElementById('mobile-market-discount').value) || 0;
            const marketGst = parseFloat(document.getElementById('mobile-market-gst').value) || 0;
            
            // Calculate auto MRP (6.25% less than input MRP)
            const autoMrp = inputMrp * (1 - 0.0625);
            document.getElementById('mobile-auto-mrp').value = autoMrp.toFixed(2);
            
            // Calculate auto rate (23.8% less than auto MRP)
            const autoRate = autoMrp * (1 - 0.238);
            document.getElementById('mobile-auto-rate').value = autoRate.toFixed(2);
            
            // Calculate final total
            const discountAmount = autoRate * (marketDiscount / 100);
            const gstAmount = autoRate * (marketGst / 100);
            const finalTotal = autoRate - discountAmount + gstAmount;
            
            document.getElementById('mobile-market-final-total').textContent = `₹${finalTotal.toFixed(2)}`;
        }
        
        // Product Life Cycle Module (Desktop)
        document.getElementById('manufacturing-date').addEventListener('change', updateExpiry);
        document.getElementById('shelf-life').addEventListener('input', updateExpiry);
        
        // Product Life Cycle Module (Mobile)
        document.getElementById('mobile-manufacturing-date').addEventListener('change', updateMobileExpiry);
        document.getElementById('mobile-shelf-life').addEventListener('input', updateMobileExpiry);
        
        function updateExpiry() {
            const manufacturingDate = document.getElementById('manufacturing-date').value;
            const shelfLife = parseInt(document.getElementById('shelf-life').value) || 0;
            const statusElement = document.getElementById('expiry-status');
            const expiryDisplay = document.getElementById('expiry-display');
            
            if (manufacturingDate && shelfLife > 0) {
                const mfgDate = new Date(manufacturingDate);
                const expiryDate = new Date(mfgDate);
                expiryDate.setMonth(expiryDate.getMonth() + shelfLife);
                
                // Format date in a more readable way (e.g., "01 January 2026")
                const formattedDate = formatDate(expiryDate);
                document.getElementById('expiry-date').value = formattedDate;
                expiryDisplay.textContent = formattedDate;
                
                // Calculate days until expiry for status
                const today = new Date();
                const timeDiff = expiryDate.getTime() - today.getTime();
                const daysDiff = Math.ceil(timeDiff / (1000 * 3600 * 24));
                
                // Update status message
                statusElement.style.display = 'block';
                
                if (daysDiff < 0) {
                    statusElement.className = 'expiry-status expired';
                    statusElement.textContent = `Product expired ${Math.abs(daysDiff)} days ago`;
                } else if (daysDiff <= 30) {
                    statusElement.className = 'expiry-status expiring-soon';
                    statusElement.textContent = `Product expires in ${daysDiff} days`;
                } else {
                    statusElement.className = 'expiry-status valid';
                    statusElement.textContent = `Product is valid for ${daysDiff} more days`;
                }
            } else {
                statusElement.style.display = 'none';
                document.getElementById('expiry-date').value = '';
                expiryDisplay.textContent = 'Not calculated';
            }
        }
        
        function updateMobileExpiry() {
            const manufacturingDate = document.getElementById('mobile-manufacturing-date').value;
            const shelfLife = parseInt(document.getElementById('mobile-shelf-life').value) || 0;
            const statusElement = document.getElementById('mobile-expiry-status');
            const expiryDisplay = document.getElementById('mobile-expiry-display');
            
            if (manufacturingDate && shelfLife > 0) {
                const mfgDate = new Date(manufacturingDate);
                const expiryDate = new Date(mfgDate);
                expiryDate.setMonth(expiryDate.getMonth() + shelfLife);
                
                // Format date in a more readable way (e.g., "01 January 2026")
                const formattedDate = formatDate(expiryDate);
                document.getElementById('mobile-expiry-date').value = formattedDate;
                expiryDisplay.textContent = formattedDate;
                
                // Calculate days until expiry for status
                const today = new Date();
                const timeDiff = expiryDate.getTime() - today.getTime();
                const daysDiff = Math.ceil(timeDiff / (1000 * 3600 * 24));
                
                // Update status message
                statusElement.style.display = 'block';
                
                if (daysDiff < 0) {
                    statusElement.className = 'expiry-status expired';
                    statusElement.textContent = `Product expired ${Math.abs(daysDiff)} days ago`;
                } else if (daysDiff <= 30) {
                    statusElement.className = 'expiry-status expiring-soon';
                    statusElement.textContent = `Product expires in ${daysDiff} days`;
                } else {
                    statusElement.className = 'expiry-status valid';
                    statusElement.textContent = `Product is valid for ${daysDiff} more days`;
                }
            } else {
                statusElement.style.display = 'none';
                document.getElementById('mobile-expiry-date').value = '';
                expiryDisplay.textContent = 'Not calculated';
            }
        }
        
        // Helper function to format date as "01 January 2026"
        function formatDate(date) {
            const months = [
                'January', 'February', 'March', 'April', 'May', 'June',
                'July', 'August', 'September', 'October', 'November', 'December'
            ];
            
            const day = date.getDate();
            const month = months[date.getMonth()];
            const year = date.getFullYear();
            
            // Add leading zero to day if needed
            const formattedDay = day < 10 ? '0' + day : day;
            
            return `${formattedDay} ${month} ${year}`;
        }
        
        // Initialize with today's date for manufacturing date
        document.getElementById('manufacturing-date').valueAsDate = new Date();
        document.getElementById('mobile-manufacturing-date').valueAsDate = new Date();
        
        // Detect screen size and show appropriate modules
        function handleScreenResize() {
            const mobileMenu = document.querySelector('.mobile-menu');
            const desktopModules = document.querySelector('.desktop-modules');
            const mobileModules = document.querySelector('.mobile-modules');
            
            if (window.innerWidth <= 768) {
                mobileMenu.style.display = 'block';
                desktopModules.style.display = 'none';
                mobileModules.style.display = 'block';
            } else {
                mobileMenu.style.display = 'none';
                desktopModules.style.display = 'block';
                mobileModules.style.display = 'none';
            }
        }
        
        // Initial call
        handleScreenResize();
        
        // Add resize listener
        window.addEventListener('resize', handleScreenResize);
    </script>
</body>
</html>